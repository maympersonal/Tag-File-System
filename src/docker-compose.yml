networks:
  servers_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.1.0/24
  clients_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.2.0/24

services:
  # ğŸ”µ Router que conecta las dos redes
  router:
    image: alpine
    container_name: router
    command: ["sh", "-c", "sysctl -w net.ipv4.ip_forward=1 && tail -f /dev/null"]
    cap_add:
      - NET_ADMIN
    networks:
      servers_net:
        ipv4_address: 10.0.1.254
      clients_net:
        ipv4_address: 10.0.2.254

  # ğŸŸ¢ Servidores Chord
  server1:
    build: ./server
    image: server
    container_name: server1
    networks:
      servers_net:
        ipv4_address: 10.0.1.2
    volumes:
      - ./server:/app
      - ./data/server1:/data
    command: python3 main.py  

  server2:
    build: ./server
    image: server
    container_name: server2
    networks:
      servers_net:
        ipv4_address: 10.0.1.3
    volumes:
      - ./server:/app
      - ./data/server2:/data
    command: python3 main.py  

  server3:
    build: ./server
    image: server
    container_name: server3
    networks:
      servers_net:
        ipv4_address: 10.0.1.4
    volumes:
      - ./server:/app
      - ./data/server3:/data
    command: python3 main.py  

  server4:
    build: ./server
    image: server
    container_name: server4
    networks:
      servers_net:
        ipv4_address: 10.0.1.5
    volumes:
      - ./server:/app
      - ./data/server4:/data
    command: python3 main.py  

  server5:
    build: ./server
    image: server
    container_name: server5
    networks:
      servers_net:
        ipv4_address: 10.0.1.6
    volumes:
      - ./server:/app
      - ./data/server5:/data
    command: python3 main.py  

  # ğŸ”´ Clientes
  client1:
    build: ./client
    image: client
    container_name: client1
    networks:
      clients_net:
        ipv4_address: 10.0.2.20
    volumes:
      - ./client:/app
    command: python3 client.py 10.0.1.2
    stdin_open: true   
    tty: true          

  client2:
    build: ./client
    image: client
    container_name: client2
    networks:
      clients_net:
        ipv4_address: 10.0.2.22
    volumes:
      - ./client:/app
    stdin_open: true   
    tty: true  
